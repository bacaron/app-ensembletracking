#!/bin/bash
#PBS -l nodes=1:ppn=16:dc2,walltime=6:30:00
#PBS -N app-ensembletracking
#PBS -V

if [ $ENV == "IUHPC" ]; then

    cd $PBS_O_WORKDIR

    module load mrtrix/0.2.12
    module load freesurfer/6.0.0
    module load matlab
fi

if [ $ENV == "VM" ]; then
    export FREESURFER_HOME=/usr/local/freesurfer
    source $FREESURFER_HOME/SetUpFreeSurfer.sh
fi

BGRAD="grad.b"

input_nii_gz=`$SERVICE_DIR/jq -r '.dwi' config.json`
BVALS=`$SERVICE_DIR/jq -r '.bvals' config.json`
BVECS=`$SERVICE_DIR/jq -r '.bvecs' config.json`
NUMFIBERS=`$SERVICE_DIR/jq -r '.fibers' config.json`
MAXNUMFIBERSATTEMPTED=`$SERVICE_DIR/jq -r '.fibers_max' config.json`
WMMASK=wm.nii.gz

echo "input_nii_gz:$input_nii_gz"
echo "BGRAD:$BGRAD"

export MATLABPATH=$MATLABPATH:$SCA_SERVICE_DIR
time matlab -nodisplay -nosplash -r main

echo "converting wm.nii.gz to wm.mif"
if [ -f wm.mif ]; then
    echo "wm.mif already exist... skipping"
else
    time mrconvert --quiet $WMMASK wm.mif
fi


echo "converting dwi input to mif (should take a few minutes)"
if [ -f dwi.mif ]; then
    echo "dwi.mif already exist... skipping"
else
    time mrconvert --quiet $input_nii_gz dwi.mif
    ret=$?
    if [ ! $ret -eq 0 ]; then
       
        echo $ret > finished
        exit $ret
       
    fi
fi




###################################################################################################

echo "make brainmask from dwi data (about 18 minutes)"
if [ -f brainmask.mif ]; then
    echo "brainmask.mif already exist... skipping"
else
    time average dwi.mif -axis 3 - | threshold - - | median3D - - | median3D - brainmask.mif
    ret=$?
    if [ ! $ret -eq 0 ]; then

        echo $ret > finished
        exit $ret
   
    fi
fi

###################################################################################################

echo "fit tensor model (takes about 16 minutes)"
if [ -f dt.mif ]; then
    echo "dt.mif already exist... skipping"
else
   
    time dwi2tensor dwi.mif -grad $BGRAD dt.mif 
fi

if [ -f fa.mif ]; then
    echo "fa.mif already exist... skipping"
else
   
    time tensor2FA dt.mif - | mrmult - brainmask.mif fa.mif
   
fi


if [ -f ev.mif ]; then
    echo "ev.mif already exist... skipping"
else
    time tensor2vector dt.mif - | mrmult - fa.mif ev.mif
    ret=$?
    if [ ! $ret -eq 0 ]; then
      
        echo $ret > finished
        exit $ret
    
    fi 
fi
###################################################################################################

echo "estimate response function"
if [ -f sf.mif ]; then
    echo "sf.mif already exist... skipping"
else 
    time erode brainmask.mif -npass 3 - | mrmult fa.mif - - | threshold - -abs 0.7 sf.mif
fi

if [ -f response.txt ]; then
    echo "response.txt already exist... skipping"
else
    
    time estimate_response dwi.mif sf.mif -lmax 6 -grad $BGRAD response.txt
    ret=$?
    if [ ! $ret -eq 0 ]; then
       
        echo $ret > finished
        exit $ret
   
    fi
fi

###################################################################################################
if [ -f lmax2.mif ] && [ -f lmax4.mif ] && [ -f lmax6.mif ] && [ -f lmax8.mif ] && [ -f lmax10.mif ]  && [ -f lmax12.mif ]; then
    echo "lmax files already exist... skipping"
else

	# Perform CSD in each white matter voxel
	for i_lmax in 2 4 6 8 10 12; do
    		csdeconv dwi.mif -grad $BGRAD response.txt -lmax $i_lmax -mask brainmask.mif lmax${i_lmax}.mif
  	 # echo DONE Lmax=$i_lmax 
	done 
fi

echo DONE performing preprocessing of data before starting tracking...



###################################################################################################



echo START tracking...
if [ -f wm_tensor.tck ]; then
   echo "wm_tensor.tck already exists....skipping"
else
#echo tracking Deterministic Tensorbased
	for i_track in 01; do
	#streamtrack DT_STREAM dwi.mif wm_tensor-NUM${i_track}-$NUMFIBERS.tck -seed wm.mif -mask wm.mif -grad $BGRAD -number $NUMFIBERS -maxnum $MAXNUMFIBERSATTEMPTED
		streamtrack DT_STREAM dwi.mif wm_tensor.tck -seed wm.mif -mask wm.mif -grad $BGRAD -number $NUMFIBERS -maxnum $MAXNUMFIBERSATTEMPTED
	done
fi

if [ -f csd_lmax2_wm_SD_STREAM.tck ] && [ -f csd_lmax2_wm_SD_PROB.tck ] && [ -f csd_lmax4_wm_SD_STREAM.tck ] && [ -f csd_lmax4_wm_SD_PROB.tck ] && \
	[ -f csd_lmax6_wm_SD_STREAM.tck ] && [ -f csd_lmax6_wm_SD_PROB.tck ] && [ -f csd_lmax8_wm_SD_STREAM.tck ] && [ -f csd_lmax8_wm_SD_PROB.tck ] && \ 
	[ -f csd_lmax10_wm_SD_STREAM.tck ] && [ -f csd_lmax10_wm_SD_PROB.tck ] && [ -f csd_lmax12_wm_SD_STREAM.tck ] && [ -f csd_lmax12_wm_SD_PROB.tck ]; then
	echo "csd tck files all exist....skipping"
else

	for i_track in 01; do
	# loop over tracking and lmax
	for i_tracktype in SD_STREAM SD_PROB; do

		echo Tracking $i_tracktype #Deterministic=1 Probabilistic=2 CSD-based

    		for i_lmax in 2 4 6 8 10 12; do
		echo Tracking CSD-based Lmax=$i_lmax
		#streamtrack $i_tracktype lmax${i_lmax}.mif  csd_lmax${i_lmax}_wm_${i_tracktype}-NUM${i_track}-$NUMFIBERS.tck -seed wm.mif  -mask wm.mif  -grad $BGRAD -number $NUMFIBERS -maxnum $MAXNUMFIBERSATTEMPTED
       		streamtrack $i_tracktype lmax${i_lmax}.mif  csd_lmax${i_lmax}_wm_${i_tracktype}.tck -seed wm.mif  -mask wm.mif  -grad $BGRAD -number $NUMFIBERS -maxnum $MAXNUMFIBERSATTEMPTED
   		done

	#echo DONE Tracking $i_tracktype Deterministic=1 Probabilistic=2 CSD-based

	done
	done
fi

echo DONE tracking. 

echo creating ensemble tractography

matlab -nodisplay -nosplash -r ensemble_connectome_generator

#cat_tracks track.tck csd_lmax2_wm_SD_STREAM.tck csd_lmax2_wm_SD_PROB.tck csd_lmax4_wm_SD_STREAM.tck csd_lmax4_wm_SD_PROB.tck\
#	csd_lmax6_wm_SD_STREAM.tck csd_lmax6_wm_SD_PROB.tck csd_lmax8_wm_SD_STREAM.tck csd_lmax8_wm_SD_PROB.tck\ 
#	csd_lmax10_wm_SD_STREAM.tck csd_lmax10_wm_SD_PROB.tck csd_lmax12_wm_SD_STREAM.tck csd_lmax12_wm_SD_PROB.tck\ 
#	wm_tensor.tck

#check for output files
if [ -s track.mat ];
then
	echo 0 > finished
else
	echo "ensemble tracking missing"
	echo 1 > finished
	exit 1
fi




